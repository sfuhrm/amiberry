name: Platform Build

on: push

env:
  QEMU_IMAGE: tonistiigi/binfmt:qemu-v5.0.1

jobs:
  qemu_show_platform_info:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU for all platforms
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: ${{ env.QEMU_IMAGE }}
          platforms: all
      -
        name: Available platforms
        run: echo ${{ steps.qemu.outputs.platforms }}

  qemu_platform_object_files:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: linux/arm/v7
            make_platform: xu4
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU for ${{ matrix.platform }}
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: ${{ env.QEMU_IMAGE }}
          platforms: ${{ matrix.platform }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1        
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Copy Dockerfile
        run: |
          cp .github/workflows/Dockerfile .

      -
        name: Build on ${{ matrix.platform }}
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: ${{ matrix.platform }}
          build-args: PLATFORM=${{ matrix.make_platform }}
          outputs: "type=tar,dest=image.tar"
      -
        name: Show it
        run: |
          ls -alR image.tar
          tar -tvf image.tar
          
      -
        name: Extract shared library
        run: |
          echo tar --wildcards -xvf image.tar build/amiberry

      - uses: actions/upload-artifact@v2
        with:
          name: amiberry_${{ matrix.make_platform }}
          path: build/amiberry